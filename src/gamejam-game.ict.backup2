ctjsVersion: 5.1.0
backups: 3
language: typescript
notes: /* empty */
libs:
  place:
    gridX: 1024
    gridY: 1024
  pointer: {}
  keyboard: {}
  keyboard.polyfill: {}
  pointer.polyfill: {}
  random: {}
startroom: -1
contentTypes: []
actions:
  - name: LeftClick
    methods:
      - code: pointer.Primary
  - name: RightClick
    methods:
      - code: pointer.Secondary
      - code: pointer.Double
  - name: Wheel
    methods:
      - code: pointer.DeltaPinch
      - code: pointer.Wheel
scripts:
  - name: game_state
    code: >
      const _START_HAT_SPD_MIN =10;

      const _START_HAT_SPD_MAX = 40;

      const _START_HAT_SCALE = 0.2;

      const _START_HAT_POSITIONS = [ Math.floor(camera.width*0.1),
      Math.floor(camera.width*0.5), Math.floor(camera.width*0.9)];

      const _START_HAT_Y = camera.height + 50;

      var _MACHINE_CENTERX;

      var _MACHINE_CENTERY;

      var _RAIL_SPEEDS = [];

      for (var a_rail = 0; a_rail < 3; a_rail++) {
          _RAIL_SPEEDS.push(random.range(_START_HAT_SPD_MIN, _START_HAT_SPD_MAX))
      }


      const rail_speeds = (rail) => {
          return _RAIL_SPEEDS[rail];
      }


      //const start_hat_speed = () => {

      //    return random.range(_START_HAT_SPD_MIN, _START_HAT_SPD_MAX);

      //};


      const start_hat_scale = () => { 
          return _START_HAT_SCALE
      };


      const start_hat_position = () => {
          let tmp = random.dice(0, 1, 2);
          return tmp;
      };


      const start_hat_position_x = (hatpos) => {
          let hat = _START_HAT_POSITIONS[hatpos];
          return hat;
      };


      const start_hat_position_y = () => {
          return _START_HAT_Y;
      };
  - name: transforms
    code: |-
      const distribute = (quantity, start) => {
          let total = Math.PI*2;
          let segment = total / quantity;
          let rtn = [];
          for ( var n=0; n < quantity; n++ ) {
              rtn.push( ( n*segment ) + start );
          }
          return rtn;
      }

      const circ_get_pos = (centerx, centery, radius, angle_arr) => {
          //here is where I need to return an array of x,y coordinates.
          let rtn = [];
          for ( const angle of angle_arr ) {
              let h = radius*(Math.sin(angle));
              let w = radius*(Math.cos(angle));
              rtn.push([(w+centerx), (h+centery)]);
          }
          
          return rtn;
      }
assets:
  - type: folder
    uid: 3J19KJKgM1499R
    colorClass: error
    icon: room
    name: rooms
    lastmod: 1726319213830
    entries:
      - type: room
        oncreate: ''
        onstep: ''
        ondraw: ''
        onleave: ''
        gridX: 32
        gridY: 32
        diagonalGrid: false
        disableGrid: false
        simulate: true
        width: 896
        height: 576
        restrictCamera: false
        restrictMaxX: 1280
        restrictMinX: 1280
        restrictMaxY: 720
        restrictMinY: 720
        isUi: false
        name: main
        backgroundColor: '#000000'
        follow: -1
        backgrounds:
          - depth: -100
            texture: T7DdqD5Pd6jL5B
            shiftX: 0
            shiftY: 0
            parallaxX: 1
            parallaxY: 1
            movementX: 0
            movementY: 0
            scaleX: 1
            scaleY: 1
            repeat: no-repeat
        copies:
          - x: 448
            'y': 352
            opacity: 0.55
            tint: '#4fffdf'
            scale:
              x: 1.55
              'y': 0.57
            rotation: 0
            uid: P9bT3c3kCnw5NM
            exts: {}
            customProperties: {}
            bindings: {}
          - x: 448
            'y': 272
            opacity: 1
            tint: 16777215
            scale:
              x: 0.3
              'y': 0.3
            rotation: 0
            uid: qP36dqMhrMbtrd
            exts: {}
            customProperties: {}
            bindings: {}
        tiles: []
        extends: {}
        lastmod: 1727539823101
        events:
          - eventKey: OnRoomStart
            code: >
              this.center_posx = camera.width*0.5;

              this.center_posy = camera.height*0.5;


              this.timer1 = 4.0; // hat part timer


              //this.timer2 = 3; // enemy timer



              this.mousepointer = templates.copy("mouse", -100, -100);


              //let [ squares_grid_height, squares_grid_width ] = grid();

              //console.log(squares_grid_height, squares_grid_width)


              // I want to write a function in a custom script that determines
              the play grid.

              // I need to provide (1) the desired grid dimensions, height and
              width

              // (2) the square dimensions, height and width

              // (3) the grid center-point, x and y

              // Then the function will return a list of x/y coordinates, each
              of which is

              // the center of each grid square. The function will also truncate
              the grid

              // dimensions to those that will fit within the screen.


              //var NewObject = {};

              //

              //NewObject['property1'] = value;

              //NewObject['property2'] = value;

              //NewObject['method'] = function(){ /* function code here */ }



              // Make a temporary off-screen copy of the square template so that
              we can discover

              // it's height and width. Then destroy the unwanted copy.

              //let temp_square = templates.copy("square", -100, -100)

              //const square = { height: temp_square.height, width:
              temp_square.width};

              //for (var sqr of templates.list['square']) { sqr.kill = true; }



              //let grid_height = Math.round(( squares_grid_height *
              (square.height + 1) ) -1);

              //let grid_width = Math.round(( squares_grid_width * (square.width
              + 1) ) -1);

              //console.log(grid_height, grid_width);


              //for ( let x = 0; x < this.squares_grid.width; x += 1) {

              //

              //}
            arguments: {}
            lib: core
          - eventKey: OnStep
            code: |+

            arguments: {}
            lib: core
          - eventKey: Timer1
            code: >
              // hattimer

              this.timer1 = random.range(5.0, 8.0);

              this.start_position = start_hat_position();

              //console.log(this.start_position,
              start_hat_position_x(this.start_position),
              start_hat_position_y());

              this.hat_part = random.dice('TopHat', 'MiddleHat', 'BottomHat')

              templates.copy(this.hat_part,
              start_hat_position_x(this.start_position),
              start_hat_position_y());
            arguments:
              name: HatTimer
              isUi: false
            lib: core
        behaviors: []
        extendTypes: ''
        uid: T8GCm54qdqn1Rb
  - type: folder
    uid: 78D9qJHKm1MJMC
    colorClass: text
    icon: texture
    name: textures
    lastmod: 1726319656658
    entries:
      - lastmod: 1726319715474
        type: texture
        name: circle-532x352
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 176
          - 176
        marginx: 0
        marginy: 0
        imgWidth: 352
        imgHeight: 352
        width: 352
        height: 352
        offx: 0
        offy: 0
        origname: iFRLHRGLhwmgCc9.png
        shape: circle
        left: 176
        right: 176
        top: 176
        bottom: 176
        uid: FRLHRGLhwmgCc9
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/strategy/circle-532x352.png
        r: 176
      - lastmod: 1726986115409
        type: texture
        name: square
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 32
          - 32
        marginx: 0
        marginy: 0
        imgWidth: 64
        imgHeight: 64
        width: 64
        height: 64
        offx: 0
        offy: 0
        origname: iz951Hf5gF8FkgG.png
        shape: rect
        left: 32
        right: 32
        top: 32
        bottom: 32
        uid: z951Hf5gF8FkgG
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/wasd-grid/square.png
      - lastmod: 1727519621577
        type: texture
        name: Moon
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 896
        imgHeight: 576
        width: 896
        height: 576
        offx: 0
        offy: 0
        origname: ijwW1jJGJtfbh7d.png
        shape: rect
        left: 0
        right: 896
        top: 0
        bottom: 576
        uid: jwW1jJGJtfbh7d
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/Moon.png
        tiled: true
      - lastmod: 1727521034406
        type: texture
        name: Rails
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 344
          - 116
        marginx: 0
        marginy: 0
        imgWidth: 685
        imgHeight: 556
        width: 685
        height: 556
        offx: 0
        offy: 0
        origname: i256j7QhWqJ6n7T.png
        shape: rect
        left: 344
        right: 340
        top: 116
        bottom: 439
        uid: 256j7QhWqJ6n7T
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/Rails.png
      - lastmod: 1727521711866
        type: texture
        name: Moon2
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 0
          - 0
        marginx: 0
        marginy: 0
        imgWidth: 896
        imgHeight: 576
        width: 896
        height: 576
        offx: 0
        offy: 0
        origname: iT7DdqD5Pd6jL5B.png
        shape: rect
        left: 0
        right: 896
        top: 0
        bottom: 576
        uid: T7DdqD5Pd6jL5B
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/Moon2.png
        tiled: true
      - lastmod: 1727523377045
        type: texture
        name: Machine2
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 321
          - 313
        marginx: 0
        marginy: 0
        imgWidth: 587
        imgHeight: 642
        width: 587
        height: 642
        offx: 0
        offy: 0
        origname: iwgTq4qfq89FhwM.png
        shape: strip
        left: 321
        right: 266
        top: 313
        bottom: 329
        uid: wgTq4qfq89FhwM
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/Machine2.png
        stripPoints:
          - x: 53
            'y': -311
          - x: 106
            'y': -200
          - x: 223
            'y': -284
          - x: 191
            'y': 125
          - x: 260
            'y': 245
          - x: 44
            'y': 314
          - x: -130
            'y': 298
          - x: -255
            'y': 93
          - x: -321
            'y': 11
          - x: -252
            'y': -87
          - x: -164
            'y': -122
          - x: -164
            'y': -287
          - x: -72
            'y': -183
          - x: -15
            'y': -257
        closedStrip: true
      - lastmod: 1727526568031
        type: texture
        name: LeftArrow
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 424
          - 393
        marginx: 0
        marginy: 0
        imgWidth: 848
        imgHeight: 786
        width: 848
        height: 786
        offx: 0
        offy: 0
        origname: imTNCtqQkjQQ68F.png
        shape: circle
        left: 424
        right: 424
        top: 393
        bottom: 393
        uid: mTNCtqQkjQQ68F
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/LeftArrow.png
        r: 392
      - lastmod: 1727526597499
        type: texture
        name: RightArrow
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 424
          - 393
        marginx: 0
        marginy: 0
        imgWidth: 848
        imgHeight: 786
        width: 848
        height: 786
        offx: 0
        offy: 0
        origname: iF6p1hrtCJqhRQJ.png
        shape: circle
        left: 424
        right: 424
        top: 393
        bottom: 393
        uid: F6p1hrtCJqhRQJ
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/RightArrow.png
        r: 392
      - lastmod: 1727526639148
        type: texture
        name: SwapArrow
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 424
          - 393
        marginx: 0
        marginy: 0
        imgWidth: 848
        imgHeight: 786
        width: 848
        height: 786
        offx: 0
        offy: 0
        origname: i3qnDq23hhC8PgK.png
        shape: circle
        left: 424
        right: 424
        top: 393
        bottom: 393
        uid: 3qnDq23hhC8PgK
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/SwapArrow.png
        r: 392
      - lastmod: 1727530221195
        type: texture
        name: BottomHat
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 236
          - 129
        marginx: 0
        marginy: 0
        imgWidth: 473
        imgHeight: 259
        width: 473
        height: 259
        offx: 0
        offy: 0
        origname: ipbF2Hm1dMGh4jM.png
        shape: rect
        left: 236
        right: 237
        top: 129
        bottom: 130
        uid: pbF2Hm1dMGh4jM
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/BottomHat.png
      - lastmod: 1727530226633
        type: texture
        name: MiddleHat
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 236
          - 129
        marginx: 0
        marginy: 0
        imgWidth: 473
        imgHeight: 259
        width: 473
        height: 259
        offx: 0
        offy: 0
        origname: ikG21TztW2McjWR.png
        shape: rect
        left: 236
        right: 237
        top: 129
        bottom: 130
        uid: kG21TztW2McjWR
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/MiddleHat.png
      - lastmod: 1727530235435
        type: texture
        name: TopHat
        untill: 0
        grid:
          - 1
          - 1
        axis:
          - 236
          - 129
        marginx: 0
        marginy: 0
        imgWidth: 473
        imgHeight: 259
        width: 473
        height: 259
        offx: 0
        offy: 0
        origname: i1dqQ7m1tBL1zw1.png
        shape: rect
        left: 236
        right: 237
        top: 129
        bottom: 130
        uid: 1dqQ7m1tBL1zw1
        padding: 1
        isBlank: false
        source: /home/matscorse/ct.js/Projects/cambridge-gamejam-2024/TopHat.png
  - type: folder
    uid: 6zbC8QmkHmKKLn
    colorClass: accent1
    icon: template
    name: templates
    lastmod: 1726320234164
    entries:
      - type: template
        baseClass: AnimatedSprite
        name: circle
        depth: 100
        texture: FRLHRGLhwmgCc9
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
          - eventKey: OnCreate
            code: |
              let own_scale = overall_scale(this);
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1726322441893
        uid: Lwbf9LKPJL5PB5
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: square
        depth: 100
        texture: z951Hf5gF8FkgG
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends:
          cgroup: ''
        lastmod: 1726986981274
        uid: P7CM4rCn8HzjmM
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: ui-square
        depth: 0
        texture: z951Hf5gF8FkgG
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
          - eventKey: OnCreate
            code: this.tint=123456;
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727516141609
        uid: 4dmJFfrTkTgT26
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: factory-square
        depth: 100
        texture: z951Hf5gF8FkgG
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
          - eventKey: OnCreate
            code: this.tint=74291;
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727517368343
        uid: bgjrmWDJTH8H5R
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: mouse
        depth: 120
        texture: 3qnDq23hhC8PgK
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |
              this.move();

              this.x = pointer.x; this.y = pointer.y;
            arguments: {}
          - eventKey: OnCreate
            code: >-
              this.scale.x = this.scale.y = 0.1;

              this.actions = [ "SwapArrow",  "LeftArrow", "SwapArrow",
              "RightArrow" ];

              this.tex = this.actions[0];
            arguments: {}
            lib: core
          - eventKey: OnActionPress
            code: this.tint = 0x446adb;
            arguments:
              action: LeftClick
            lib: core
          - eventKey: OnActionPress
            code: |
              this.actions.push(this.actions.shift());
              this.tex = this.actions[0];
            arguments:
              action: RightClick
            lib: core
          - eventKey: OnActionRelease
            code: this.tint = 0xffffff;
            arguments:
              action: LeftClick
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727531427768
        uid: KWdCdFP5PmPC22
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: Rails
        depth: -10
        texture: 256j7QhWqJ6n7T
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
        extends:
          cgroup: ''
          alpha: 0.8
        lastmod: 1727521083150
        uid: P9bT3c3kCnw5NM
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: Machine2
        depth: -50
        texture: wgTq4qfq89FhwM
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
          - eventKey: OnCreate
            code: |-
              globalThis._MACHINE_CENTERX = this.x;
              globalThis._MACHINE_CENTERY = this.y;
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727537744634
        uid: qP36dqMhrMbtrd
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: BottomHat
        depth: 10
        texture: pbF2Hm1dMGh4jM
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
          - eventKey: OnCreate
            code: |
              this.scale.x = this.scale.y = start_hat_scale();

              let targetx = this.x - globalThis._MACHINE_CENTERX;
              let targety = this.y - globalThis._MACHINE_CENTERY;
              let mag_angle = (Math.tanh(targety / targetx) * 360);
              let angle = Math.round(mag_angle - 90);
              console.log(angle);

              if (this.x == _START_HAT_POSITIONS[0]) {
                  this.direction = angle;
                  this.speed = rail_speeds(0);
              };
              if (this.x == _START_HAT_POSITIONS[1]) {
                  this.direction = angle;
                  this.speed = rail_speeds(1);
              };
              if (this.x == _START_HAT_POSITIONS[2]) {
                  this.direction = angle;
                  this.speed = rail_speeds(2);
              };
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727534951837
        uid: Q9CPBkKPPdPwrL
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: MiddleHat
        depth: 0
        texture: kG21TztW2McjWR
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: this.move();
            arguments: {}
          - eventKey: OnCreate
            code: |
              this.scale.x = this.scale.y = start_hat_scale();

              let targetx = this.x - globalThis._MACHINE_CENTERX;
              let targety = this.y - globalThis._MACHINE_CENTERY;
              let mag_angle = (Math.tanh(targety / targetx) * 360);
              let angle = Math.round(mag_angle - 90);
              console.log(angle);

              if (this.x == _START_HAT_POSITIONS[0]) {
                  this.direction = angle;
                  this.speed = rail_speeds(0);
              };
              if (this.x == _START_HAT_POSITIONS[1]) {
                  this.direction = angle;
                  this.speed = rail_speeds(1);
              };
              if (this.x == _START_HAT_POSITIONS[2]) {
                  this.direction = angle;
                  this.speed = rail_speeds(2);
              };
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727534951772
        uid: PnMDFk8w2fDCDD
        behaviors: []
        extendTypes: ''
      - type: template
        baseClass: AnimatedSprite
        name: TopHat
        depth: 0
        texture: 1dqQ7m1tBL1zw1
        playAnimationOnStart: false
        loopAnimation: true
        animationFPS: 30
        visible: true
        events:
          - eventKey: OnStep
            lib: core
            code: |
              this.move();
            arguments: {}
          - eventKey: OnCreate
            code: |
              this.scale.x = this.scale.y = start_hat_scale();

              let targetx = this.x - globalThis._MACHINE_CENTERX;
              let targety = this.y - globalThis._MACHINE_CENTERY;
              let mag_angle = (Math.tan(targety / targetx) * 360);
              let angle = Math.round(mag_angle - 90);
              console.log(angle);

              if (this.x == _START_HAT_POSITIONS[0]) {
                  this.direction = angle;
                  this.speed = rail_speeds(0);
              };
              if (this.x == _START_HAT_POSITIONS[1]) {
                  this.direction = angle;
                  this.speed = rail_speeds(1);
              };
              if (this.x == _START_HAT_POSITIONS[2]) {
                  this.direction = angle;
                  this.speed = rail_speeds(2);
              };
            arguments: {}
            lib: core
        extends:
          cgroup: ''
        lastmod: 1727534909153
        uid: WKGkkMCbjmMNrJ
        behaviors: []
        extendTypes: ''
globalVars: []
settings:
  authoring:
    author: gazmatu
    site: ''
    title: hex-machina
    version:
      - 0
      - 0
      - 1
    versionPostfix: ''
    appId: ''
  rendering:
    usePixiLegacy: true
    transparent: false
    maxFPS: 60
    pixelatedrender: false
    highDensity: true
    desktopMode: maximized
    hideCursor: false
    mobileScreenOrientation: unspecified
    viewMode: scaleFit
  export:
    showErrors: true
    errorsLink: ''
    autocloseDesktop: true
    windows: true
    linux: true
    mac: true
    functionWrap: false
    codeModifier: none
    bundleAssetTree: false
    bundleAssetTypes:
      texture: true
      template: true
      room: true
      behavior: false
      typeface: false
      sound: false
      style: false
      tandem: false
      script: false
      enum: false
  branding:
    accent: '#446adb'
    invertPreloaderScheme: true
    icon: -1
    splashScreen: -1
    forceSmoothIcons: false
    forceSmoothSplashScreen: false
    hideLoadingLogo: false
    alternativeLogo: false
    customLoadingText: ''
  fps: 30
palette: []
